version: "3.7"

services:

    # Laravel App
    app:
        container_name: ${PROJECT_NAME}-app
        build:
            args:
                user: laravel
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: ${PROJECT_NAME}-app:9
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./.docker/php/local.ini:/etc/php.d/local.ini
        networks:
            - app_network

    # Nginx Service
    nginx:
        container_name: ${PROJECT_NAME}-nginx
        image: nginx:1.21.6-alpine
        restart: unless-stopped
        ports:
            - ${NGINX_HTTP_PORT}:80
        volumes:
            - ./:/var/www
            - ./.docker/nginx/:/etc/nginx/conf.d/
        depends_on:
            - app
            - postgres
        networks:
            - app_network

    # Postgres Service
    postgres:
        container_name: ${PROJECT_NAME}-postgres
        image: postgres:14.2-alpine
        restart: unless-stopped
        environment:
            POSTGRES_DATABASE: ${DB_DATABASE}
            POSTGRES_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
        volumes:
            - dbdata:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:5432
        networks:
            - app_network

    # Node Service
    npm:
        container_name: ${PROJECT_NAME}-npm
        image: node:16-alpine
        working_dir: /var/www/
        entrypoint: ['npm']
        user: node
        environment:
            NPM_CONFIG_LOGLEVEL: warn
        volumes:
            - ./:/var/www
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    dbdata:
        driver: local

