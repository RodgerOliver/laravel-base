version: "3.7"

services:

    # PHP Service
    php:
        container_name: ${PROJECT_NAME}_php
        build:
            args:
                user: laravel
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: ${PROJECT_NAME}_php
        restart: always
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./.docker/php/local.ini:/etc/php.d/local.ini
        networks:
            - app_network

    # Nginx Service
    nginx:
        container_name: ${PROJECT_NAME}_nginx
        image: nginx:1.21.6-alpine
        restart: always
        ports:
            - ${NGINX_HTTP_PORT}:80
        volumes:
            - ./:/var/www
            - ./.docker/nginx/:/etc/nginx/conf.d/
        depends_on:
            - php
            - mysql
        networks:
            - app_network

    # Mysl Service
    mysql:
        container_name: ${PROJECT_NAME}_mysql
        image: mysql:8
        restart: always
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - mysql_dbdata:/var/lib/mysql
        ports:
            - ${MYSQL_PORT}:3306
        networks:
            - app_network

    # Node Service
    npm:
        container_name: ${PROJECT_NAME}_npm
        image: node:16-alpine
        working_dir: /var/www/
        entrypoint: ['npm']
        user: node
        environment:
            NPM_CONFIG_LOGLEVEL: warn
        volumes:
            - ./:/var/www
            - ./.npmrc:/var/www/.npmrc
        networks:
            - app_network

    # Composer Service
    composer:
        container_name: ${PROJECT_NAME}_composer
        image: composer:2.3
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - app_network

    # Artisan Service
    artisan:
        container_name: ${PROJECT_NAME}_artisan
        image: ${PROJECT_NAME}_php
        working_dir: /var/www/
        entrypoint: ['php', 'artisan']
        volumes:
            - ./:/var/www
        depends_on:
            - mysql
        networks:
            - app_network

    # Npm Watch Service
    npm_watch:
        container_name: ${PROJECT_NAME}_npm-watch
        image: node:16-alpine
        restart: unless-stopped
        working_dir: /var/www/
        entrypoint: ['npm', 'run', 'watch']
        user: node
        environment:
            NPM_CONFIG_LOGLEVEL: warn
        volumes:
            - ./:/var/www
            - ./.npmrc:/var/www/.npmrc
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    mysql_dbdata:
        driver: local

